{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/greys/fullstackpath/fs-path/persa/src/components/PetForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function PetForm({ onSubmit, initialData = {} }) {\r\n    const [formData, setFormData] = useState({\r\n        name: initialData.name || \"\",\r\n        type: initialData.type || \"\",\r\n    });\r\n\r\n    function handleChange(e) {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onSubmit(formData);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"p-4 border rounded\">\r\n            <div className=\"mb-4\">\r\n                <label className=\"block\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleChange}\r\n                    className=\"border p-2 w-full\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n                <label className=\"block\">Type</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"type\"\r\n                    value={formData.type}\r\n                    onChange={handleChange}\r\n                    className=\"border p-2 w-full\"\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"bg-green-500 text-white px-4 py-2 rounded\">Save</button>\r\n        </form>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC,EAAE;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACrC,MAAM,YAAY,IAAI,IAAI;QAC1B,MAAM,YAAY,IAAI,IAAI;IAC9B;IAEA,SAAS,aAAa,CAAC;QACnB,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC/D;IAEA,SAAS,aAAa,CAAC;QACnB,EAAE,cAAc;QAChB,SAAS;IACb;IAEA,qBACI,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACpC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAM,WAAU;kCAAQ;;;;;;kCACzB,8OAAC;wBACG,MAAK;wBACL,MAAK;wBACL,OAAO,SAAS,IAAI;wBACpB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAM,WAAU;kCAAQ;;;;;;kCACzB,8OAAC;wBACG,MAAK;wBACL,MAAK;wBACL,OAAO,SAAS,IAAI;wBACpB,UAAU;wBACV,WAAU;wBACV,QAAQ;;;;;;;;;;;;0BAGhB,8OAAC;gBAAO,MAAK;gBAAS,WAAU;0BAA4C;;;;;;;;;;;;AAGxF"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/greys/fullstackpath/fs-path/persa/src/utils/api.js"],"sourcesContent":["const API_URL = \"http://localhost:8080/pets\"; // Adjust for your backend\r\n\r\nexport async function fetchPets() {\r\n    const res = await fetch(API_URL);\r\n    return res.json();\r\n}\r\n\r\nexport async function fetchPet(id) {\r\n    const res = await fetch(`${API_URL}/${id}`);\r\n    return res.json();\r\n}\r\n\r\nexport async function createPet(pet) {\r\n    await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(pet),\r\n    });\r\n}\r\n\r\nexport async function updatePet(id, pet) {\r\n    await fetch(`${API_URL}/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(pet),\r\n    });\r\n}\r\n\r\nexport async function deletePet(id) {\r\n    await fetch(`${API_URL}/${id}`, { method: \"DELETE\" });\r\n}"],"names":[],"mappings":";;;;;;;AAAA,MAAM,UAAU,8BAA8B,0BAA0B;AAEjE,eAAe;IAClB,MAAM,MAAM,MAAM,MAAM;IACxB,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe,SAAS,EAAE;IAC7B,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAI;IAC1C,OAAO,IAAI,IAAI;AACnB;AAEO,eAAe,UAAU,GAAG;IAC/B,MAAM,MAAM,SAAS;QACjB,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACzB;AACJ;AAEO,eAAe,UAAU,EAAE,EAAE,GAAG;IACnC,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE;QAC5B,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;IACzB;AACJ;AAEO,eAAe,UAAU,EAAE;IAC9B,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE;QAAE,QAAQ;IAAS;AACvD"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/greys/fullstackpath/fs-path/persa/src/app/pets/edit/%5Bid%5D/page.js"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PetForm from \"../../../../components/PetForm\";\r\nimport { fetchPet, updatePet } from \"../../../../utils/api\";\r\n\r\nexport default function EditPet() {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [pet, setPet] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            fetchPet(id).then(setPet);\r\n        }\r\n    }, [id]);\r\n\r\n    async function handleUpdate(updatedPet) {\r\n        await updatePet(id, updatedPet);\r\n        router.push(\"/pets\");\r\n    }\r\n\r\n    if (!pet) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Edit Pet</h1>\r\n            <PetForm onSubmit={handleUpdate} initialData={pet} />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,KAAK;IAC3B,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,IAAI,IAAI;YACJ,CAAA,GAAA,mHAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,IAAI,CAAC;QACtB;IACJ,GAAG;QAAC;KAAG;IAEP,eAAe,aAAa,UAAU;QAClC,MAAM,CAAA,GAAA,mHAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QACpB,OAAO,IAAI,CAAC;IAChB;IAEA,IAAI,CAAC,KAAK,qBAAO,8OAAC;kBAAE;;;;;;IAEpB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC,4HAAA,CAAA,UAAO;gBAAC,UAAU;gBAAc,aAAa;;;;;;;;;;;;AAG1D"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}